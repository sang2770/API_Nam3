// <auto-generated />
using System;
using BTL_APIMOVIE.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BTL_APIMOVIE.Migrations
{
    [DbContext(typeof(APIMOVIESContext))]
    partial class APIMOVIESContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbBinhluan", b =>
                {
                    b.Property<int>("Mabinhluan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MABINHLUAN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mabinhluan"), 1L, 1);

                    b.Property<int>("Maphim")
                        .HasColumnType("int")
                        .HasColumnName("MAPHIM");

                    b.Property<int>("Mataikhoan")
                        .HasColumnType("int")
                        .HasColumnName("MATAIKHOAN");

                    b.Property<string>("Noidung")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOIDUNG");

                    b.Property<DateTime?>("Thoigian")
                        .HasColumnType("date")
                        .HasColumnName("THOIGIAN");

                    b.HasKey("Mabinhluan")
                        .HasName("PK_BINHLUAN");

                    b.HasIndex("Maphim");

                    b.HasIndex("Mataikhoan");

                    b.ToTable("TB_BINHLUAN", (string)null);
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbLoaiphim", b =>
                {
                    b.Property<int>("Maloaiphim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MALOAIPHIM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Maloaiphim"), 1L, 1);

                    b.Property<string>("Tenloaiphim")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TENLOAIPHIM");

                    b.HasKey("Maloaiphim")
                        .HasName("PK_LOAIPHIM");

                    b.ToTable("TB_LOAIPHIM", (string)null);
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbNguoidung", b =>
                {
                    b.Property<int>("Mataikhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MATAIKHOAN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mataikhoan"), 1L, 1);

                    b.Property<string>("Loaitaikhoan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LOAITAIKHOAN");

                    b.Property<string>("Matkhau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MATKHAU");

                    b.Property<string>("Tendangnhap")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TENDANGNHAP");

                    b.HasKey("Mataikhoan")
                        .HasName("PK_TAIKHOAN");

                    b.ToTable("TB_NGUOIDUNG", (string)null);
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbPhim", b =>
                {
                    b.Property<int>("Maphim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MAPHIM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Maphim"), 1L, 1);

                    b.Property<string>("Anh")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ANH");

                    b.Property<string>("Danhgiaphim")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DANHGIAPHIM");

                    b.Property<string>("Duongdan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DUONGDAN");

                    b.Property<string>("Motaphim")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("MOTAPHIM");

                    b.Property<int>("Nam")
                        .HasColumnType("int")
                        .HasColumnName("NAM");

                    b.Property<string>("Ngonngu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NGONNGU");

                    b.Property<string>("Tenphim")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TENPHIM");

                    b.Property<int>("Thoiluong")
                        .HasColumnType("int")
                        .HasColumnName("THOILUONG");

                    b.HasKey("Maphim")
                        .HasName("PK_PHIM");

                    b.ToTable("TB_PHIM", (string)null);
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbPhimLoaiPhim", b =>
                {
                    b.Property<int>("Ma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ma"), 1L, 1);

                    b.Property<int>("Maloaiphim")
                        .HasColumnType("int")
                        .HasColumnName("MALOAIPHIM");

                    b.Property<int>("Maphim")
                        .HasColumnType("int")
                        .HasColumnName("MAPHIM");

                    b.HasKey("Ma")
                        .HasName("PK_PHIM_lOAIPHIM");

                    b.HasIndex("Maloaiphim");

                    b.HasIndex("Maphim");

                    b.ToTable("TB_Phim_LoaiPhim", (string)null);
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbPhimQuocgia", b =>
                {
                    b.Property<int>("Ma")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Ma"), 1L, 1);

                    b.Property<int>("Maphim")
                        .HasColumnType("int")
                        .HasColumnName("MAPHIM");

                    b.Property<int>("Maquocgia")
                        .HasColumnType("int")
                        .HasColumnName("MAQUOCGIA");

                    b.HasKey("Ma")
                        .HasName("PK_PHIM_QUOCGIA");

                    b.HasIndex("Maphim");

                    b.HasIndex("Maquocgia");

                    b.ToTable("TB_PHIM_QUOCGIA", (string)null);
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbQuocgia", b =>
                {
                    b.Property<int>("Maquocgia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MAQUOCGIA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Maquocgia"), 1L, 1);

                    b.Property<string>("Tenquocgia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TENQUOCGIA");

                    b.HasKey("Maquocgia")
                        .HasName("PK_QUOCGIA");

                    b.ToTable("TB_QUOCGIA", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbBinhluan", b =>
                {
                    b.HasOne("BTL_APIMOVIE.Models.TbPhim", "MaphimNavigation")
                        .WithMany("TbBinhluans")
                        .HasForeignKey("Maphim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TB_PHIM_BINHLUAN");

                    b.HasOne("BTL_APIMOVIE.Models.TbNguoidung", "MataikhoanNavigation")
                        .WithMany("TbBinhluans")
                        .HasForeignKey("Mataikhoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_BINHLUAN_NGUOIDUNG");

                    b.Navigation("MaphimNavigation");

                    b.Navigation("MataikhoanNavigation");
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbPhimLoaiPhim", b =>
                {
                    b.HasOne("BTL_APIMOVIE.Models.TbLoaiphim", "MaloaiphimNavigation")
                        .WithMany("TbPhimLoaiPhims")
                        .HasForeignKey("Maloaiphim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TB_LoaiPhim");

                    b.HasOne("BTL_APIMOVIE.Models.TbPhim", "MaphimNavigation")
                        .WithMany("TbPhimLoaiPhims")
                        .HasForeignKey("Maphim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TB_PHIM");

                    b.Navigation("MaloaiphimNavigation");

                    b.Navigation("MaphimNavigation");
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbPhimQuocgia", b =>
                {
                    b.HasOne("BTL_APIMOVIE.Models.TbPhim", "MaphimNavigation")
                        .WithMany("TbPhimQuocgia")
                        .HasForeignKey("Maphim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TB_PHIM_QG");

                    b.HasOne("BTL_APIMOVIE.Models.TbQuocgia", "MaquocgiaNavigation")
                        .WithMany("TbPhimQuocgia")
                        .HasForeignKey("Maquocgia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TB_QUOCGIA");

                    b.Navigation("MaphimNavigation");

                    b.Navigation("MaquocgiaNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbLoaiphim", b =>
                {
                    b.Navigation("TbPhimLoaiPhims");
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbNguoidung", b =>
                {
                    b.Navigation("TbBinhluans");
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbPhim", b =>
                {
                    b.Navigation("TbBinhluans");

                    b.Navigation("TbPhimLoaiPhims");

                    b.Navigation("TbPhimQuocgia");
                });

            modelBuilder.Entity("BTL_APIMOVIE.Models.TbQuocgia", b =>
                {
                    b.Navigation("TbPhimQuocgia");
                });
#pragma warning restore 612, 618
        }
    }
}
